Resources:
  GuardDutyDetector:
    Type: "AWS::GuardDuty::Detector"
    Properties:
      Enable: true

# FYI: In Jinja2 loops are 1-based but arrays are 0-based,
#  hence AWSSubAccounts[loop.index-2] gets the previous account
  {% for Account in AWSSubAccounts %}
  GuardDutyMember{{Account['Id']}}:
    DependsOn:
      - GuardDutyDetector
      {% if loop.index > 1 %}
      - GuardDutyMember{{AWSSubAccounts[loop.index-2]['Id']}}
      {% endif %}
    Type: "AWS::GuardDuty::Member"
    Properties:
      Status: "Invited"
      MemberId: "{{Account['Id']}}"
      Email: "{{Account['Email']}}"
      Message: "You are invited to enable Amazon Guardduty."
      DetectorId: !Ref GuardDutyDetector
      DisableEmailNotification: true
  {% endfor %}
